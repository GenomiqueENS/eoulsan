<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.ens.biologie.genomique</groupId>
	<artifactId>eoulsan</artifactId>
	<packaging>jar</packaging>
	<version>2.5-SNAPSHOT</version>
	<name>Eoulsan</name>
	<description>
		A pipeline for NGS analysis.
	</description>
	<url>http://outils.genomique.biologie.ens.fr/eoulsan</url>
	<inceptionYear>2010</inceptionYear>

	<properties>
		<didyouknow>Did you know that eoulsan is the breton word for pipeline?
		</didyouknow>

		<java.version>1.8</java.version>
		<hadoop.version>2.3.0</hadoop.version>
		<htsjdk.version>1.118</htsjdk.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<organization>
		<name>École normale supérieure genomic platform</name>
		<url>https://www.genomique.biologie.ens.fr/</url>
	</organization>

	<developers>
		<developer>
			<id>jourdren</id>
			<name>Laurent Jourdren</name>
			<email>eoulsan 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Lead Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties>
                                <picUrl>https://avatars2.githubusercontent.com/u/3381031?s=60</picUrl>
                        </properties>

		</developer>
		<developer>
			<id>bernard</id>
			<name>Maria Bernard</name>
			<email>eoulsan 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</developer>
		<developer>
			<id>wallon</id>
			<name>Claire Wallon</name>
			<email>eoulsan 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</developer>
		<developer>
			<id>deshaies</id>
			<name>Vivien Deshaies</name>
			<email>deshaies 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties/>
		</developer>
		<developer>
			<id>sperrin</id>
			<name>Sandrine Perrin</name>
			<email>sperrin 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties/>

		</developer>
		<developer>
			<id>bauquet</id>
			<name>Xavier Bauquet</name>
			<email>bauquet 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties>
				<picUrl>https://avatars2.githubusercontent.com/u/8179943?s=60</picUrl>
			</properties>
		</developer>
		<developer>
			<id>firmo</id>
			<name>Cyril Firmo</name>
			<email>firmo 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</developer>
		<developer>
			<id>du</id>
			<name>Runxin Du</name>
			<email>du 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</developer>
		<developer>
			<id>birer</id>
			<name>Aurélien Birer</name>
			<email>birer 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</developer>
		<developer>
			<id>berthelier</id>
			<name>Charlotte Berthelier</name>
			<email>berthelier 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</developer>
		<developer>
			<id>lecrom</id>
			<name>Stéphane Le Crom</name>
			<email>eoulsan 0 biologie ens fr</email>
			<url />
			<organization>
				École normale supérieure, IBENS, Genomics core facility
			</organization>
			<organizationUrl>
				https://www.genomique.biologie.ens.fr/
			</organizationUrl>
			<roles>
				<role>Project manager and documentation review</role>
			</roles>
			<timezone>1</timezone>
			<properties/>

		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Marie-agnès Dilies</name>
			<email />
			<url />
			<organization>Pasteur Institute, Paris, Transcriptome and Epigenome
				platform
			</organization>
			<organizationUrl>http://www.pasteur.fr/</organizationUrl>
			<roles>
				<role>Differential analysis normalization help</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</contributor>
		<contributor>
			<name>Marlène Gratigny</name>
			<email />
			<url />
			<organization>École normale supérieure, IBENS, Dyogen group
			</organization>
			<organizationUrl>http://www.ibens.ens.fr/spip.php?article82&amp;lang=en
			</organizationUrl>
			<roles>
				<role>Testing and documentation review</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</contributor>
		<contributor>
			<name>Valentine Murigneux</name>
			<email />
			<url />
			<organization>École normale supérieure, IBENS, Expression of
				eukaryotic messenger RNAs group
			</organization>
			<organizationUrl>http://www.ibens.ens.fr/spip.php?article80&amp;lang=en
			</organizationUrl>
			<roles>
				<role>Testing</role>
			</roles>
			<timezone>1</timezone>
			<properties />
		</contributor>

	</contributors>

	<licenses>
		<license>
			<name>GNU Lesser General Public License v2.1</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<distribution>repo</distribution>
			<comments />
		</license>
		<license>
			<name>GNU Lesser General Public License v3.0</name>
			<url>http://www.gnu.org/licenses/lgpl-3.0.txt</url>
			<distribution>repo</distribution>
			<comments />
		</license>
		<license>
			<name>CeCILL-C Licence française de logiciel libre</name>
			<url>http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.txt</url>
			<distribution>repo</distribution>
			<comments />
		</license>
	</licenses>

	<mailingLists>
		<mailingList>
			<name>eoulsan-group</name>
			<subscribe>http://groups.google.com/group/eoulsan/subscribe
			</subscribe>
			<!--unsubscribe>http://groups.google.com/group/eoulsan/unsubscribe</unsubscribe -->
			<archive>http://groups.google.com/group/eoulsan</archive>
		</mailingList>
	</mailingLists>

	<repositories>
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>CHiBi</id>
			<name>CHibi repository</name>
			<url>http://www.chibi.ubc.ca/maven2</url>
		</repository>

		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>ens</id>
			<name>ENS repository</name>
			<!--url>https://maven-repository.dev.java.net/nonav/repository</url -->
			<url>http://outils.genomique.biologie.ens.fr/maven2</url>
		</repository>
		<!--repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository-->
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>imagej</id>
			<name>ImageJ repository</name>
			<url>http://maven.imagej.net/content/repositories/releases/</url>
		</repository>
	</repositories>

	<scm>
		<url>https://github.com/GenomicParisCentre/eoulsan</url>
		<connection>scm:git:git://github.com/GenomicParisCentre/eoulsan.git</connection>
		<developerConnection>scm:git:git@github.com:GenomicParisCentre/eoulsan.git</developerConnection>
	</scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/GenomicParisCentre/eoulsan/issues</url>
	</issueManagement>


	<dependencies>
		<!-- Compilation dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.1.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.beanshell</groupId>
			<artifactId>bsh</artifactId>
			<version>2.0b4</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.12</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.3.0</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
					</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.19</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.picard</groupId>
			<artifactId>htsjdk</artifactId>
			<version>${htsjdk.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.picard</groupId>
			<artifactId>picard</artifactId>
			<version>${htsjdk.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.nuiton.thirdparty</groupId>
			<artifactId>REngine</artifactId>
			<version>0.6-1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.nuiton.thirdparty</groupId>
			<artifactId>Rserve</artifactId>
			<version>0.6-1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.4.5</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.3.30</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.lanterna</groupId>
			<artifactId>lanterna</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.2</version>
		</dependency>
		<!-- Translator ODF and apache POI dependencies -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.17</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.17</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.odftoolkit</groupId>
			<artifactId>odfdom-java</artifactId>
			<version>0.8.8-incubating</version>
		</dependency>
		<dependency>
			<groupId>org.apache.odftoolkit</groupId>
			<artifactId>simple-odf</artifactId>
			<version>0.7-incubating</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.12.0</version>
		</dependency>
		<!-- Python interpreter -->
		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython-standalone</artifactId>
			<version>2.7.0</version>
		</dependency>
		<!-- AWS java SDK runtime dependencies -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.3</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.8.9</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.8.9</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>uk.ac.babraham</groupId>
			<artifactId>fastqc</artifactId>
			<version>0.11.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.seqdoop</groupId>
			<artifactId>hadoop-bam</artifactId>
			<version>7.0.0-hadoop-${hadoop.version}</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>itadaki</groupId>
			<artifactId>jbzip2</artifactId>
			<version>0.9</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Required by htsjdk -->
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.10.9</version>
			<scope>compile</scope>
		</dependency>

		<!-- Log4J is used by Hadoop for logging. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.13.2</version>
		</dependency>

		<!-- Required to patch FastQC at runtime -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.23.1-GA</version>
			<scope>compile</scope>
		</dependency>

		<!-- Required by Docker -->
		<dependency>
			<groupId>com.spotify</groupId>
			<artifactId>docker-client</artifactId>
			<classifier>shaded</classifier>
			<version>3.1.3</version>
		</dependency>

		<!-- Required by Docker and AWS java SDK runtime -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Required by Docker -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.6</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Required by Docker -->
		<dependency>
			<groupId>de.gesellix</groupId>
			<artifactId>unix-socket-factory</artifactId>
			<version>2014-11-16T14-41-27</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Required by Docker -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.3.2</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Docker Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.6</version>
		</dependency>

		<!-- Docker Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>fr.ens.biologie.genomique</groupId>
			<artifactId>aozan</artifactId>
			<version>2.0-rc11</version>
		</dependency>
		<dependency>
			<groupId>org.xerial.snappy</groupId>
			<artifactId>snappy-java</artifactId>
			<version>1.0.3-rc3</version>
		</dependency>

                <!-- Cheetah Python module -->
		<dependency>
			<groupId>org.cheetahtemplate</groupId>
			<artifactId>cheetah</artifactId>
			<version>2.4.4</version>
		</dependency>

                <!-- Trimmomatic -->
		<dependency>
			<groupId>org.usadellab</groupId>
			<artifactId>trimmomatic</artifactId>
			<version>0.36</version>
		</dependency>

		<!-- Required to read HDFS5/FAST5 files -->
		<dependency>
			<groupId>cisd</groupId>
			<artifactId>jhdf5</artifactId>
			<version>12.02.3</version>
			<!--scope>compile</scope-->
		</dependency>

                <!-- Required by Apache POI -->
                <dependency>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-collections4</artifactId>
                        <version>4.1</version>
		</dependency>

		<!-- Fix Java 11 warning -->
                <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>2.2.11</version>
                </dependency>
                <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-core</artifactId>
                        <version>2.2.11</version>
                </dependency>
                <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                        <version>2.2.11</version>
                </dependency>
                <dependency>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                        <version>1.1.1</version>
                </dependency>

	</dependencies>

	<build>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<!--scriptSourceDirectory>src/main/scripts</scriptSourceDirectory-->
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/java/files</directory>
			</resource>
			<resource>
				<directory>src/main/java/META-INF</directory>
				<targetPath>META-INF</targetPath>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/java/files</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!--plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> 
					</plugin -->
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>

				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-Xlint</compilerArgument>
					<compilerId>javac-with-errorprone</compilerId>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.plexus</groupId>
						<artifactId>plexus-compiler-javac-errorprone</artifactId>
						<version>2.5</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<testNGArtifactName>none:none</testNGArtifactName>
					<!--skip>true</skip -->
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<version>1.16</version>
				<executions>
					<execution>
						<id>signature-check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<signature>
						<groupId>org.codehaus.mojo.signature</groupId>
						<artifactId>java18</artifactId>
						<version>1.0</version>
					</signature>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>generate-ressources</id>
						<phase>generate-resources</phase>
						<configuration>
							<tasks>
								<mkdir dir="${basedir}/target/generated-resources" />
								<buildnumber file="${basedir}/build.num" />
								<tstamp>
									<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss z" />
									<format property="YEAR" pattern="yyyy" />
								</tstamp>

								<!-- execute git describe -->
								<exec executable="git" failifexecutionfails="false"
									outputproperty="build.commit">
									<arg value="describe" />
									<arg value="--all" />
									<arg value="--long" />
								</exec>

								<condition property="build.commit" value="">
									<not>
										<isset property="build.commit"/>
									</not>
								</condition>

								<exec executable="hostname" outputproperty="build.host"/>

								<manifest file="${basedir}/target/generated-resources/MANIFEST.MF">
									<attribute name="Built-By" value="${user.name}"/>
									<attribute name="Built-Date" value="${TODAY}"/>
									<attribute name="Built-Year" value="${YEAR}"/>
									<attribute name="Built-Commit" value="${build.commit}" />
									<attribute name="Built-Host" value="${build.host}" />

									<attribute name="Specification-Title" value="${project.name}"/>
									<attribute name="Specification-Version" value="${project.version}"/>
									<attribute name="Specification-Vendor" value="${project.organization.name}"/>

									<attribute name="Implementation-Title" value="${project.name}"/>
									<attribute name="Implementation-Version" value="build${build.number}"/>
									<attribute name="Implementation-Vendor" value="${project.organization.name}"/>

									<attribute name="Main-Class" value="fr.ens.biologie.genomique.eoulsan.Main" />
								</manifest>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<configuration>
							<tasks>
								<mkdir dir="${basedir}/target/classes/META-INF" />
								<copy file="${basedir}/target/generated-resources/MANIFEST.MF"
									tofile="${basedir}/target/classes/META-INF/MANIFEST.MF" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>create-dists</id>
           					<phase>package</phase>
           					<configuration>
             						<tasks unless="distrib.package.skip">

								<!-- skip this task with command: mvn -Ddistrib.package.skip=true -->
								<!-- Package binary distribution -->

								<mkdir dir="${basedir}/target/dist/bin" />
								<mkdir dir="${basedir}/target/dist/lib" />
								<!--copy file="${basedir}/COMPILING.txt" todir="${basedir}/target/dist/" 
									/ -->
								<copy file="${basedir}/INSTALL.txt" todir="${basedir}/target/dist/" />
								<copy file="${basedir}/LICENSE-LGPL.txt" todir="${basedir}/target/dist/" />
								<copy file="${basedir}/LICENSE-CeCILL-C.txt" todir="${basedir}/target/dist/" />

								<copy file="${basedir}/src/main/bin/${project.artifactId}.sh" todir="${basedir}/target/dist/" />
								<chmod file="${basedir}/target/dist/${project.artifactId}.sh" perm="ugo+rx" />

								<copy todir="${basedir}/target/dist/bin">
									<fileset dir="${basedir}/src/main/bin">
										<include name="bpipe-*" />
									</fileset>
								</copy>

								<copy todir="${basedir}/target/dist/galaxytools">
									<fileset dir="${basedir}/src/main/galaxytools"/>
								</copy>

								<copy todir="${basedir}/target/dist/formats">
									<fileset dir="${basedir}/src/main/formats"/>
								</copy>

								<copy file="${basedir}/target/${project.artifactId}-${project.version}.jar" todir="${basedir}/target/dist/lib/" />
								<move file="${basedir}/target/dist/" tofile="${basedir}/target/dist/${project.artifactId}-${project.version}"/>

								<!-- Package source distribution -->

								<mkdir dir="${basedir}/target/dist-src/" />
								<copy todir="${basedir}/target/dist-src/">
									<fileset dir="${basedir}">
										<include name="src/**" />
										<include name="pom.xml" />
										<include name="checkstyle.xml" />
										<include name="checkstyle-license.txt" />
										<include name="COMPILING.txt" />
										<include name="INSTALL.txt" />
										<include name="LICENSE-LGPL.txt" />
										<include name="LICENSE-CeCILL-C.txt" />
									</fileset>
								</copy>
								<move file="${basedir}/target/dist-src/" tofile="${basedir}/target/dist-src/${project.artifactId}-${project.version}"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>compress-dists</id>
						<phase>package</phase>
						<configuration>
							<tasks unless="distrib.package.compression.skip">

								<!-- skip this task with command: mvn -Ddistrib.package.compression.skip=true -->
								<!-- Compress dist -->
o
								<tar longfile="gnu" destfile="${basedir}/target/${project.artifactId}-${project.version}.tar">
									<tarfileset dir="${basedir}/target/dist"  mode="644" dirmode="755" username="nobody" group="nobody">
										<include name="*/**"/>
										<exclude name="${project.artifactId}-${project.version}/${project.artifactId}.sh" />
										<exclude name="${project.artifactId}-${project.version}/bin/*" />
									</tarfileset>
									<tarfileset dir="${basedir}/target/dist"  mode="755" dirmode="755" username="nobody" group="nobody">
										<include name="${project.artifactId}-${project.version}/${project.artifactId}.sh" />
										<include name="${project.artifactId}-${project.version}/bin/*" />
									</tarfileset>
								</tar>
								<gzip zipfile="${basedir}/target/${project.artifactId}-${project.version}.tar.gz"
									src="${basedir}/target/${project.artifactId}-${project.version}.tar"/>
					            <bzip2 destfile="${basedir}/target/${project.artifactId}-${project.version}.tar.bz2"
                                    src="${basedir}/target/${project.artifactId}-${project.version}.tar"/>
								<untar src="${basedir}/target/${project.artifactId}-${project.version}.tar"
									dest="${basedir}/target/tar-bin"/>
                                <zip destfile="${basedir}/target/${project.artifactId}-${project.version}.zip"
                                    basedir="${basedir}/target/tar-bin"/>

								<!-- Compress dist-src -->
								<tar longfile="gnu" tarfile="${basedir}/target/${project.artifactId}-src-${project.version}.tar">

									<tarfileset dir="${basedir}/target/dist-src" mode="755"
										username="nobody" group="nobody">
										<include name="*/**" />
									</tarfileset>
								</tar>
								<gzip zipfile="${basedir}/target/${project.artifactId}-src-${project.version}.tar.gz"
									src="${basedir}/target/${project.artifactId}-src-${project.version}.tar"/>
								<bzip2 destfile="${basedir}/target/${project.artifactId}-src-${project.version}.tar.bz2"
									src="${basedir}/target/${project.artifactId}-src-${project.version}.tar"/>

								<untar src="${basedir}/target/${project.artifactId}-src-${project.version}.tar"
									dest="${basedir}/target/tar-src"/>
                                <zip destfile="${basedir}/target/${project.artifactId}-src-${project.version}.zip"
                                    basedir="${basedir}/target/tar-src"/>
  							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>replace-variables-site</id>
						<phase>site</phase>
						<configuration>
							<tasks>
								<copy file="${basedir}/src/main/bin/eoulsan-docker-installer.sh" todir="${basedir}/target/site/" />
								<replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.url}">
									<include name="**/*.jnlp"/>
									<include name="**/*.html"/>
									<include name="**/*.rss"/>
									<include name="**/*.sh"/>
									<replacetoken>@@@WEBSITE@@@</replacetoken>
								</replace>
								<replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.version}">
									<include name="**/*.jnlp"/>
									<include name="**/*.html"/>
									<include name="**/*.rss"/>
									<include name="**/*.sh"/>
									<replacetoken>@@@VERSION@@@</replacetoken>
								</replace>
								<replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.name}">
									<include name="**/*.jnlp"/>
									<include name="**/*.html"/>
									<include name="**/*.rss"/>
									<include name="**/*.sh"/>
									<replacetoken>@@@APPNAME@@@</replacetoken>
								</replace>
								<replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.artifactId}">
									<include name="**/*.jnlp"/>
									<include name="**/*.html"/>
									<include name="**/*.rss"/>
									<include name="**/*.sh"/>
									<replacetoken>@@@APPNAMEMIN@@@</replacetoken>
								</replace>

								<tstamp>
									<format property="TODAY_UK" pattern="EEE, dd MMM yyyy HH:mm:ss z"
										locale="en,UK" />
								</tstamp>

								<replace encoding="UTF-8" dir="${basedir}/target/site"
									value="${TODAY_UK}">
									<include name="**/*.jnlp" />
									<include name="**/*.html" />
									<include name="**/*.rss" />
									<include name="**/*.sh"/>
									<replacetoken>@@@DATE@@@</replacetoken>
								</replace>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>integrate-archives-site</id>
						<phase>install</phase>
						<configuration>
							<tasks unless="distrib.package.compression.skip">

								<!-- skip this task with command: mvn -Ddistrib.package.skip=true -->

								<mkdir dir="${basedir}/target/site" />

								<copy file="${basedir}/target/${project.artifactId}-${project.version}.tar.gz"
									todir="${basedir}/target/site"/>
								<copy file="${basedir}/target/${project.artifactId}-src-${project.version}.tar.gz"
									todir="${basedir}/target/site"/>
								<copy file="${basedir}/target/${project.artifactId}-${project.version}.tar.bz2"
									todir="${basedir}/target/site"/>
								<copy file="${basedir}/target/${project.artifactId}-src-${project.version}.tar.bz2"
									todir="${basedir}/target/site"/>
								<copy file="${basedir}/target/${project.artifactId}-${project.version}.zip"
									todir="${basedir}/target/site"/>
								<copy file="${basedir}/target/${project.artifactId}-src-${project.version}.zip"
									todir="${basedir}/target/site"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<archive>
						<manifestEntries>
							<mode>development</mode>
							<url>${project.url}</url>
						</manifestEntries>
						<manifestFile>${basedir}/target/generated-resources/MANIFEST.MF
						</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-common-libs</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- All libs except junit, hadoop-core, ws-java-sdk and its runtime 
								dependencies -->
							<excludeArtifactIds>junit,hadoop-client,aws-java-sdk,httpclient,commons-logging,commons-codec,jackson-core-asl,jackson-mapper-asl
							</excludeArtifactIds>
							<excludeTransitive>true</excludeTransitive>
							<outputDirectory>${basedir}/target/dist/lib</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- hadoop-core, aws-java-sdk and its runtime dependencies -->
							<includeArtifactIds>hadoop-client,aws-java-sdk,httpclient,commons-logging,commons-codec,jackson-core-asl,jackson-mapper-asl
							</includeArtifactIds>
							<outputDirectory>${basedir}/target/dist/lib/local
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<templateFile>${basedir}/src/site/site.vm</templateFile>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
				<executions>
					<execution>
						<id>attach-descriptor</id>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- add plugin for test with Jenkins : static analysis code -->
			<!-- PLUG-IN Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<configLocation>./checkstyle.xml</configLocation>
				</configuration>
			</plugin>

			<!-- PLUG-IN Findbugs to maven 3 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.5</version>
				<configuration>
					<effort>Max</effort>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>

			<!-- PLUG-IN PMD/CPD -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.10.0</version>
				<configuration>
					<!-- PMD options -->
					<targetJdk>${java.version}</targetJdk>
					<aggregate>true</aggregate>
					<format>xml</format>
					<rulesets>
						<ruleset>./pmd-rules.xml</ruleset>
					</rulesets>

					<!-- CPD options -->
					<minimumTokens>20</minimumTokens>
					<ignoreIdentifiers>true</ignoreIdentifiers>
					<configLocation>./checkstyle_google.xml</configLocation>
				</configuration>
			</plugin>

			<!-- PLUG-in for static analysis code -->
			<!-- mvn modernizer:modernizer -->
			<plugin>
				<groupId>org.gaul</groupId>
				<artifactId>modernizer-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>modernizer</id>
						<phase>verify</phase>
						<goals>
							<goal>modernizer</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<javaVersion>${java.version}</javaVersion>
					<failOnViolations>False</failOnViolations>
				</configuration>
			</plugin>
		</plugins>


	</build>



	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.12.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<encoding>utf-8</encoding>
					<doctitle>${project.name} ${project.version} API</doctitle>
					<overview>${basedir}/src/main/java/overview.html</overview>
					<quiet>true</quiet>
				</configuration>
				<reportSets>
					<reportSet>
						<id>default</id>
						<configuration/>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

</project>
